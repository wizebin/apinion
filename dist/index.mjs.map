{"version":3,"file":"index.mjs","sources":["../src/utilities/getTypeString.js","../src/utilities/HttpError.js","../src/authenticators/basicAuthenticator.js","../src/authenticators/bearerTokenAuthenticator.js","../src/authenticators/requestAuthenticator.js","../src/utilities/joinWithSingle.js","../src/utilities/parseBody.js","../src/utilities/WritableBufferStream.js","../src/utilities/responseWrapper.js","../src/Router.js","../src/utilities/makeEndpoint.js"],"sourcesContent":["export function getTypeString(data) {\n  const stringType = typeof data;\n  if (stringType === 'object') {\n    if (data === null) return 'null';\n    const stringified = toString.apply(data);\n    if (stringified.length > 2 && stringified[0] === '[' && stringified[stringified.length - 1] === ']') {\n      const splits = stringified.substr(1, stringified.length - 2).split(' ');\n      if (splits.length > 1) {\n        return splits.slice(1).join(' ').toLowerCase();\n      }\n    }\n    return 'unknown';\n  }\n\n  if (stringType === 'number') {\n    if (isNaN(data)) return 'nan';\n  }\n\n  return stringType;\n}\n","import { getTypeString } from './getTypeString';\n\nexport class HttpError {\n  constructor({ status, message, data }) {\n    this.name = 'HTTP Error';\n    this.status = status;\n    this.message = message;\n    this.data = data;\n  }\n}\n\nexport function stringifyError(error) {\n  if (error instanceof Error) {\n    return JSON.stringify(error, Object.getOwnPropertyNames(error));\n  } else {\n    return JSON.stringify(error);\n  }\n}\n\nexport function applyHttpError(request, response, error) {\n  const status = error?.status || 500;\n  const message = error?.message || 'Uncaught Error Without Message';\n  const data = error?.data || {};\n\n  response.status(status);\n\n  if (getTypeString(message) === 'object') {\n    response.json(Object.assign(data, message));\n  } else if (message) {\n    response.json(Object.assign(data, { message }));\n  } else {\n    response.send(stringifyError(error));\n  }\n}\n","import { HttpError } from '../utilities/HttpError';\n\n/**\n * pass an array of users with usernames and passwords, any additional data included in the subobjects will be passed in as well as the identity parameter into your endpoint\n * @param {[{ username: string, password: string }]} users\n */\nexport function makeHardcodedBasicAuthenticator(users) {\n  const usersByUsername = {};\n  for (let user of users) {\n    usersByUsername[user.username] = user;\n  }\n\n  const getUser = ({ username, password }) => {\n    const user = usersByUsername[username];\n    if (user && user.password === password) {\n      return user;\n    }\n\n    return null;\n  }\n\n  return makeBasicAuthenticator(getUser);\n}\n\nexport function makeBasicAuthenticator(getUserFromCredentialsFunction) {\n  return async ({ headers }) => {\n    if (!headers.authorization) {\n      console.log(headers);\n      throw new HttpError({ status: 401, message: 'Missing Authentication' });\n    }\n\n    if (headers.authorization.toLowerCase().indexOf('basic') !== 0) {\n      throw new HttpError({ status: 405, message: 'Incorrect Authentication' });\n    }\n\n    const auth = headers.authorization.replace(/^basic\\s+/gi, '');\n    const encoded = Buffer.from(auth, 'base64');\n    const decoded = encoded.toString('utf-8');\n    const colonPosition = decoded.indexOf(':');\n    const username = decoded.substr(0, colonPosition);\n    const password = decoded.substr(colonPosition + 1);\n\n    const user = await getUserFromCredentialsFunction({ username, password });\n    console.log({ auth, encoded, decoded, colonPosition, username, password, user })\n\n    if (!user) {\n      throw new HttpError({ status: 401, message: 'Incorrect Credentials' });\n    }\n\n    return user;\n  }\n}\n","import { HttpError } from '../utilities/HttpError';\n\nexport function makeBearerTokenAuthenticator(getUserFromBearerFunction) {\n  return async ({ headers }) => {\n    if (!headers.authorization) {\n      throw new HttpError({ status: 401, message: 'Missing Authentication' });\n    }\n\n    if (headers.authorization.toLowerCase().indexOf('bearer') !== 0) {\n      throw new HttpError({ status: 405, message: 'Incorrect Authentication' });\n    }\n\n    const token = headers.authorization.replace(/^bearer\\s+/gi, '');\n\n    const identity = await getUserFromBearerFunction(token);\n    if (!identity) {\n      throw new HttpError({ status: 401, message: 'Incorrect Credentials' });\n    }\n\n    return identity;\n  }\n}\n","import { HttpError } from '../utilities/HttpError';\n\nexport function makeRequestAuthenticator(getUserFromRequest) {\n  return async (params) => {\n    const identity = await getUserFromRequest(params);\n    if (!identity) {\n      throw new HttpError({ status: 401, message: 'Incorrect Credentials' });\n    }\n\n    return identity;\n  }\n}\n","function findIndexInDirection(string, predicate, direction = 1) {\n  if (direction > 0) {\n    for (let dex = 0; dex < string.length; dex += 1) {\n      if (predicate(string[dex], dex)) return dex;\n    }\n  } else {\n    for (let dex = string.length - 1; dex >= 0; dex -= 1) {\n      if (predicate(string[dex], dex)) return dex + 1;\n    }\n  }\n\n  return null;\n}\n\nexport function joinWithSingle(parts, joiner) {\n  if (!joiner) return parts.join('');\n\n  const cleanedPartArray = parts.map((item, dex) => {\n    const firstNonJoiner = dex === 0 ? 0 : findIndexInDirection(item, (letter => (letter !== joiner)), 1);\n    const finalNonJoiner = dex === parts.length - 1 ? item.length : findIndexInDirection(item, (letter => letter !== joiner), -1);\n    return item.slice(firstNonJoiner, finalNonJoiner);\n  });\n\n  return cleanedPartArray.join(joiner);\n}\n","import { getTypeString } from './getTypeString';\n\nconst startingChars = {\n  '{': 'json',\n  '[': 'json',\n  '<': 'xml',\n};\n\nexport function parseBody(input) {\n  if (!input) return null;\n  const inputType = getTypeString(input);\n  if (inputType === 'string') {\n    const startingType = startingChars[input[0]];\n    if (startingType === 'json') {\n      try {\n        const output = JSON.parse(input);\n        return output;\n      } catch (err) {\n        // not json\n      }\n    }\n\n    const sections = input.split('&');\n    const output = {};\n    for (let section of sections) {\n      const parts = section.split('=').map(item => decodeURIComponent(item));\n      output[parts[0]] = parts[1];\n    }\n    return output;\n  }\n\n  if (inputType === 'array' || inputType === 'object') {\n    return input;\n  }\n\n\n\n  throw new HttpError({ status: 500, message: `issue parsing body, it came in as ${inputType}, but string is the only supported method` })\n}\n","import { Writable } from 'stream';\n\nexport class WritableBufferStream extends Writable {\n  buffer = Buffer.alloc(0);\n  constructor(callback, options) {\n    super(options);\n    this.callback = callback;\n  }\n\n  _write(chunk, encoding, callback) {\n    if (chunk) {\n      this.buffer = Buffer.concat([this.buffer, chunk]);\n    }\n\n    callback();\n  }\n\n  _final(callback) {\n    this.callback(this.buffer);\n    callback();\n  }\n\n  _destroy() {\n    this.buffer = null;\n  }\n}\n","import { applyHttpError, HttpError } from './HttpError';\nimport { parseBody } from './parseBody';\nimport { WritableBufferStream } from './WritableBufferStream';\n\nfunction getParams(keyList, { body, query }) {\n  const missing = [];\n  const data = {};\n  for (let key of keyList) {\n    if (body?.[key] !== undefined) {\n      data[key] = body[key];\n    } else if (query?.[key] !== undefined) {\n      data[key] = query[key];\n    } else {\n      missing.push(key);\n    }\n  }\n  return { missing, data };\n}\n\nfunction collectBody(request) {\n  return new Promise((resolve, reject) => {\n    const output = new WritableBufferStream(resolve);\n    output.on('error', reject);\n    request.pipe(output);\n  });\n}\n\n/**\n *\n * @param {function} func\n * @param {{ authenticator: function }} config\n */\nexport function responseWrapper(func, config, apinionRouter) {\n  if (typeof func !== 'function') {\n    if (typeof config === 'function') {\n      func = config;\n      config = {};\n\n      // we COULD throw here, but it's perhaps better to just let people do what they want\n    } else {\n      throw new Error('endpoint executor must be a function check config (this happens when you use makeEndpoint inside of a get/post/any, or if you forget the config parameter) ' + JSON.stringify(config));\n    }\n  }\n\n  return async (request, response) => {\n    try {\n      if (!config.noParse) {\n        request.raw = await collectBody(request);\n        const body = parseBody(request.raw.toString());\n        request.body = body;\n      }\n      const params = { request, response, body: config.noParse ? undefined : request.body, query: request.query, headers: request.headers, params: Object.assign({}, request.query || {}, request.body || {}) };\n      if (config.authenticator) {\n        params.identity = await config.authenticator(params);\n      }\n      if (config.required) {\n        const { missing, data } = getParams(config.required, params);\n\n        if (missing.length > 0) {\n          throw new HttpError({ status: 400, message: `missing params: ${missing.map(item => `\"${item}\"`).join(', ')}` });\n        }\n\n        params.required = data;\n      }\n      if (config.hidden_required) {\n        const { missing, data } = getParams(config.hidden, params);\n\n        if (missing.length > 0) {\n          throw new HttpError({ status: 400, message: 'your request is incomplete (this is probably because you are missing some essential hidden requirement)' });\n        }\n\n        params.hidden = data;\n      }\n      const endpointResponse = await func(params);\n      if (!response._headerSent) {\n        if (typeof endpointResponse === 'string') {\n          response.send(endpointResponse);\n        } else {\n          response.json(endpointResponse);\n        }\n      }\n    } catch (err) {\n      try {\n        await config?.onError?.({ error: err, config, request, response });\n        await apinionRouter?.onError?.({ error: err, config, request, response });\n      } catch (subError) {\n        console.error(`custom error handler threw error (check your onError handler in your ${config?.route || request.originalUrl} endpoint) (check your apinionRouter.onError function)`, subError);\n      }\n\n      if (!response._headerSent) {\n        applyHttpError(request, response, err);\n      }\n    }\n  };\n}\n","import express from 'express';\nimport { joinWithSingle } from './utilities/joinWithSingle';\nimport { responseWrapper } from './utilities/responseWrapper';\n\nexport class Router {\n  /**\n   * @param {express} expressApp\n   * @param {Router} parent\n   * @param {string} baseDirectory\n   */\n  constructor(expressApp, parent, baseDirectory) {\n    this.parent = parent;\n    this.expressApp = expressApp || express();\n    this.baseDirectory = baseDirectory;\n    this.routes = {};\n  }\n\n  addErrorHandler = (callback) => {\n    this.onErrorCallback = callback;\n  }\n\n  onError = (...params) => {\n    if (this.onErrorCallback) {\n      return this.onErrorCallback(...params);\n    } else {\n      this.parent?.onError(...params);\n    }\n  }\n\n  setAuthenticator = (authenticator) => {\n    this.authenticator = authenticator;\n  }\n\n  getRoutes = () => {\n    const result = {};\n\n    const keyList = Object.keys(this.routes);\n\n    for (let key of keyList) {\n      const info = Object.assign({}, this.routes[key]);\n      if (info.subrouter) {\n        info.subrouter = info.subrouter.getRoutes?.();\n      }\n      result[key] = info;\n    }\n\n    return result;\n  }\n\n  getCleanedSubPath = (path) => {\n    const subPath = this.getSubPath(path);\n    if (subPath.length > 0 && subPath[0] !== '/') return '/' + subPath; // http://server.comFIX => http://server.com/FIX\n\n    return subPath;\n  }\n\n  getSubPath = (path) => {\n    if (!this.baseDirectory) return path;\n    if (path === '/') return this.baseDirectory;\n    return joinWithSingle([this.baseDirectory, path], '/');\n  }\n\n  describeSubroute = (subdirectory, meta) => {\n    if (!this.routes[subdirectory]) this.routes[subdirectory] = {};\n    Object.assign(this.routes[subdirectory], meta);\n  }\n\n  subrouter = (subdirectory) => {\n    const subRouter = new Router(this.expressApp, this, this.getCleanedSubPath(subdirectory));\n    subRouter.setAuthenticator(this.authenticator);\n    this.describeSubroute(subdirectory, { subrouter: subRouter });\n    return subRouter;\n  }\n\n  getResponseWrapper = (callback, config = {}) => {\n    if (this.authenticator && !config.authenticator) {\n      config.authenticator = this.authenticator;\n    }\n\n    return responseWrapper(callback, config, this);\n  }\n\n  makeRouteDetails = (type, route, config, callback) => {\n    const defaultedConfig = config || {};\n    const cleanedPath = this.getCleanedSubPath(route);\n    if (!defaultedConfig.route) defaultedConfig.route = cleanedPath;\n    this.describeSubroute(cleanedPath, { [type]: defaultedConfig });\n    let params = [cleanedPath];\n    if (defaultedConfig?.middleware) {\n      params = params.concat(defaultedConfig.middleware)\n    }\n    params.push(this.getResponseWrapper(callback, defaultedConfig));\n    return params;\n  }\n\n  get = (route, config, callback) => {\n    return this.expressApp.get(...this.makeRouteDetails('get', route, config, callback));\n  }\n  post = (route, config, callback) => {\n    return this.expressApp.post(...this.makeRouteDetails('post', route, config, callback));\n  }\n  put = (route, config, callback) => {\n    return this.expressApp.put(...this.makeRouteDetails('put', route, config, callback));\n  }\n  patch = (route, config, callback) => {\n    return this.expressApp.patch(...this.makeRouteDetails('patch', route, config, callback));\n  }\n  delete = (route, config, callback) => {\n    return this.expressApp.delete(...this.makeRouteDetails('delete', route, config, callback));\n  }\n  options = (route, config, callback) => {\n    return this.expressApp.options(...this.makeRouteDetails('options', route, config, callback));\n  }\n  any = (route, config, callback) => {\n    const params = this.makeRouteDetails('any', route, config, callback);\n\n    return [\n      this.expressApp.get(...params),\n      this.expressApp.put(...params),\n      this.expressApp.post(...params),\n      this.expressApp.patch(...params),\n      this.expressApp.delete(...params),\n      this.expressApp.options(...params),\n    ];\n  }\n  use = (...passthrough) => {\n    this.expressApp.use(...passthrough);\n  }\n  applyRoutes = (routes) => {\n    if (Array.isArray && !Array.isArray(routes)) {\n      routes = [routes];\n    }\n\n    for (let route of routes) {\n      const { path, executor, get, options, delete: deleteRoute, patch, post, put, subrouter, any } = route;\n\n      if (executor) this.any(path, executor.config, executor.callback);\n      if (any) this.any(path, any.config, any.callback);\n      if (get) this.get(path, get.config, get.callback);\n      if (post) this.post(path, post.config, post.callback);\n      if (options) this.options(path, options.config, options.callback);\n      if (patch) this.patch(path, patch.config, patch.callback);\n      if (put) this.put(path, put.config, put.callback);\n      if (deleteRoute) this.delete(path, deleteRoute.config, deleteRoute.callback);\n      if (subrouter) {\n        const sub = this.subrouter(path);\n        sub.applyRoutes(subrouter);\n      }\n    }\n  }\n  expressApp() {\n    return this.expressApp;\n  }\n  expressConnection() {\n    return this.expressConnection;\n  }\n  enableCors = (origin = '*', headers = 'Origin, X-Requested-With, Content-Type, Accept, Authorization') => {\n    this.expressApp.use((req, res, next) => {\n      res.header('Access-Control-Allow-Origin', origin);\n      res.header('Access-Control-Allow-Headers', headers);\n      next();\n    });\n    this.expressApp.options('*', (request, result) => result.status(200).send());\n  }\n  close = () => {\n    if (this.connection) {\n      this.connection.close();\n    }\n  }\n  listen = (port, callback) => {\n    return new Promise((resolve, reject) => {\n      this.connection = this.expressApp.listen(port, (results) => {\n        console.log('listening on port', port);\n        callback?.(results);\n        this.expressApp.removeListener('error', reject)\n        resolve(results);\n      });\n      this.expressApp.once('error', reject);\n      this.connection.keepAliveTimeout = 60 * 1000;\n      this.connection.headersTimeout = 61 * 1000;\n    });\n  }\n}\n","export function makeEndpoint(config, executionFunction) {\n  return {\n    config,\n    callback: executionFunction,\n  };\n}\n"],"names":["getTypeString","data","stringType","stringified","toString","apply","length","splits","substr","split","slice","join","toLowerCase","isNaN","HttpError","status","message","name","stringifyError","error","Error","JSON","stringify","Object","getOwnPropertyNames","applyHttpError","request","response","json","assign","send","makeHardcodedBasicAuthenticator","users","usersByUsername","user","username","getUser","password","makeBasicAuthenticator","getUserFromCredentialsFunction","headers","authorization","console","log","indexOf","auth","replace","encoded","Buffer","from","decoded","colonPosition","makeBearerTokenAuthenticator","getUserFromBearerFunction","token","identity","makeRequestAuthenticator","getUserFromRequest","params","findIndexInDirection","string","predicate","direction","dex","joinWithSingle","parts","joiner","cleanedPartArray","map","item","firstNonJoiner","letter","finalNonJoiner","startingChars","parseBody","input","inputType","startingType","output","parse","err","sections","section","decodeURIComponent","WritableBufferStream","callback","options","alloc","chunk","encoding","buffer","concat","Writable","getParams","keyList","body","query","missing","key","undefined","push","collectBody","Promise","resolve","reject","on","pipe","responseWrapper","func","config","apinionRouter","noParse","raw","authenticator","required","hidden_required","hidden","endpointResponse","_headerSent","onError","route","originalUrl","Router","expressApp","parent","baseDirectory","onErrorCallback","result","keys","routes","info","subrouter","getRoutes","path","subPath","getSubPath","subdirectory","meta","subRouter","getCleanedSubPath","setAuthenticator","describeSubroute","type","defaultedConfig","cleanedPath","middleware","getResponseWrapper","get","makeRouteDetails","post","put","patch","use","Array","isArray","executor","deleteRoute","any","sub","applyRoutes","origin","req","res","next","header","connection","close","port","listen","results","removeListener","once","keepAliveTimeout","headersTimeout","express","expressConnection","makeEndpoint","executionFunction"],"mappings":"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"}