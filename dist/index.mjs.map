{"version":3,"file":"index.mjs","sources":["../src/utilities/getTypeString.js","../src/utilities/HttpError.js","../src/authenticators/basicAuthenticator.js","../src/authenticators/bearerTokenAuthenticator.js","../src/authenticators/requestAuthenticator.js","../src/utilities/joinWithSingle.js","../src/utilities/parseBody.js","../src/utilities/WritableBufferStream.js","../src/utilities/responseWrapper.js","../src/utilities/websock.js","../src/Router.js","../src/utilities/makeEndpoint.js"],"sourcesContent":["export function getTypeString(data) {\n  const stringType = typeof data;\n  if (stringType === 'object') {\n    if (data === null) return 'null';\n    const stringified = toString.apply(data);\n    if (stringified.length > 2 && stringified[0] === '[' && stringified[stringified.length - 1] === ']') {\n      const splits = stringified.substr(1, stringified.length - 2).split(' ');\n      if (splits.length > 1) {\n        return splits.slice(1).join(' ').toLowerCase();\n      }\n    }\n    return 'unknown';\n  }\n\n  if (stringType === 'number') {\n    if (isNaN(data)) return 'nan';\n  }\n\n  return stringType;\n}\n","import { getTypeString } from './getTypeString';\n\nexport class HttpError {\n  constructor({ status, message, data }) {\n    this.name = 'HTTP Error';\n    this.status = status;\n    this.message = message;\n    this.data = data;\n  }\n}\n\nexport function stringifyError(error) {\n  if (error instanceof Error) {\n    return JSON.stringify(error, Object.getOwnPropertyNames(error));\n  } else {\n    return JSON.stringify(error);\n  }\n}\n\nexport function applyHttpError(request, response, error) {\n  const status = error?.status || 500;\n  const message = error?.message || 'Uncaught Error Without Message';\n  const data = error?.data || {};\n\n  response.status(status);\n\n  if (getTypeString(message) === 'object') {\n    response.json(Object.assign(data, message));\n  } else if (message) {\n    response.json(Object.assign(data, { message }));\n  } else {\n    response.send(stringifyError(error));\n  }\n}\n","import { HttpError } from '../utilities/HttpError';\n\n/**\n * pass an array of users with usernames and passwords, any additional data included in the subobjects will be passed in as well as the identity parameter into your endpoint\n * we recommend strongly that you do not use this, we provide this as an early development tool but you should use a request authenticator or a bearer token authenticator\n * @param {Array.<{ username: string, password: string }>} users\n * @returns function\n **/\nexport function makeHardcodedBasicAuthenticator(users) {\n  const usersByUsername = {};\n  for (let user of users) {\n    usersByUsername[user.username] = user;\n  }\n\n  const getUser = ({ username, password }) => {\n    const user = usersByUsername[username];\n    if (user && user.password === password) {\n      return user;\n    }\n\n    return null;\n  }\n\n  return makeBasicAuthenticator(getUser);\n}\n\n/**\n * When you use this authenticator, the user's request will be rejected if they don't include the authorization header, or if their auth header is malformed, or if your callback function does not return an identity\n * This function handles base64 decoding and splitting the username and password\n * Your callback function should return an identity structure for you to use in your endpoint handler, or null if the user is not authenticated\n * @param {function({ username: string, password: string }, { request: express.Request, response: express.Response, body: object, query: object, headers: object, params: object }):any} getUserFromCredentials\n * @returns function\n */\nexport function makeBasicAuthenticator(getUserFromCredentials) {\n  return async (config) => {\n    const { headers } = config;\n\n    if (!headers.authorization) {\n      throw new HttpError({ status: 401, message: 'Missing Authentication' });\n    }\n\n    if (headers.authorization.toLowerCase().indexOf('basic') !== 0) {\n      throw new HttpError({ status: 405, message: 'Incorrect Authentication' });\n    }\n\n    const auth = headers.authorization.replace(/^basic\\s+/gi, '');\n    const encoded = Buffer.from(auth, 'base64');\n    const decoded = encoded.toString('utf-8');\n    const colonPosition = decoded.indexOf(':');\n    const username = decoded.substring(0, colonPosition);\n    const password = decoded.substring(colonPosition + 1);\n\n    const user = await getUserFromCredentials({ username, password }, config);\n\n    if (!user) {\n      throw new HttpError({ status: 401, message: 'Incorrect Credentials' });\n    }\n\n    return user;\n  }\n}\n","import { HttpError } from '../utilities/HttpError';\n\n/**\n * When you use this authenticator, the user's request will be rejected if they don't include the authorization header, or if their auth header is malformed, or if your callback function does not return an identity\n * Your callback function should return an identity structure for you to use in your endpoint handler, or null if the user is not authenticated\n * @param {function({ token: string, config: { request: express.Request, response: express.Response, body: object, query: object, headers: object, params: object }):any} getUserFromBearerFunction\n * @returns function\n */\nexport function makeBearerTokenAuthenticator(getUserFromBearerFunction) {\n  return async (config) => {\n    const { headers } = config;\n\n    if (!headers.authorization) {\n      throw new HttpError({ status: 401, message: 'Missing Authentication' });\n    }\n\n    if (headers.authorization.toLowerCase().indexOf('bearer') !== 0) {\n      throw new HttpError({ status: 405, message: 'Incorrect Authentication' });\n    }\n\n    const token = headers.authorization.replace(/^bearer\\s+/gi, '');\n\n    const identity = await getUserFromBearerFunction(token, config);\n    if (!identity) {\n      throw new HttpError({ status: 401, message: 'Incorrect Credentials' });\n    }\n\n    return identity;\n  }\n}\n","import { HttpError } from '../utilities/HttpError';\n\n/**\n * Create an authenticator to be used in your endpoints, this authenticator can be async and should return the identity you want to use in your endpoint. identity is passed as a part of the object to your endpoint handler\n * @param {function({ request: express.Request, response: express.Response, body: object, query: object, headers: object, params: object }):any} getUserFromRequest\n * @returns function\n */\nexport function makeRequestAuthenticator(getUserFromRequest) {\n  return async (params) => {\n    const identity = await getUserFromRequest(params);\n    if (!identity) {\n      throw new HttpError({ status: 401, message: 'Incorrect Credentials' });\n    }\n\n    return identity;\n  }\n}\n","function findIndexInDirection(string, predicate, direction = 1) {\n  if (direction > 0) {\n    for (let dex = 0; dex < string.length; dex += 1) {\n      if (predicate(string[dex], dex)) return dex;\n    }\n  } else {\n    for (let dex = string.length - 1; dex >= 0; dex -= 1) {\n      if (predicate(string[dex], dex)) return dex + 1;\n    }\n  }\n\n  return null;\n}\n\nexport function joinWithSingle(parts, joiner) {\n  if (!joiner) return parts.join('');\n\n  const cleanedPartArray = parts.map((item, dex) => {\n    const firstNonJoiner = dex === 0 ? 0 : findIndexInDirection(item, (letter => (letter !== joiner)), 1);\n    const finalNonJoiner = dex === parts.length - 1 ? item.length : findIndexInDirection(item, (letter => letter !== joiner), -1);\n    return item.slice(firstNonJoiner, finalNonJoiner);\n  });\n\n  return cleanedPartArray.join(joiner);\n}\n","import { getTypeString } from './getTypeString';\n\nconst startingChars = {\n  '{': 'json',\n  '[': 'json',\n  '<': 'xml',\n};\n\nexport function parseBody(input) {\n  if (!input) return null;\n  const inputType = getTypeString(input);\n  if (inputType === 'string') {\n    const startingType = startingChars[input[0]];\n    if (startingType === 'json') {\n      try {\n        const output = JSON.parse(input);\n        return output;\n      } catch (err) {\n        // not json\n      }\n    }\n\n    const sections = input.split('&');\n    const output = {};\n    for (let section of sections) {\n      const parts = section.split('=').map(item => decodeURIComponent(item));\n      output[parts[0]] = parts[1];\n    }\n    return output;\n  }\n\n  if (inputType === 'array' || inputType === 'object') {\n    return input;\n  }\n\n\n\n  throw new HttpError({ status: 500, message: `issue parsing body, it came in as ${inputType}, but string is the only supported method` })\n}\n","import { Writable } from 'stream';\n\nexport class WritableBufferStream extends Writable {\n  buffer = Buffer.alloc(0);\n  constructor(callback, options) {\n    super(options);\n    this.callback = callback;\n  }\n\n  _write(chunk, encoding, callback) {\n    if (chunk) {\n      this.buffer = Buffer.concat([this.buffer, chunk]);\n    }\n\n    callback();\n  }\n\n  _final(callback) {\n    this.callback(this.buffer);\n    callback();\n  }\n\n  _destroy() {\n    this.buffer = null;\n  }\n}\n","import { applyHttpError, HttpError } from './HttpError';\nimport { parseBody } from './parseBody';\nimport { WritableBufferStream } from './WritableBufferStream';\n\nfunction getParams(keyList, { body, query }) {\n  const missing = [];\n  const data = {};\n  for (let key of keyList) {\n    if (body?.[key] !== undefined) {\n      data[key] = body[key];\n    } else if (query?.[key] !== undefined) {\n      data[key] = query[key];\n    } else {\n      missing.push(key);\n    }\n  }\n  return { missing, data };\n}\n\nfunction collectBody(request) {\n  return new Promise((resolve, reject) => {\n    const output = new WritableBufferStream(resolve);\n    output.on('error', reject);\n    request.pipe(output);\n  });\n}\n\n/**\n *\n * @param {function} func\n * @param {{ authenticator: function }} config\n */\nexport function responseWrapper(func, config, apinionRouter, type) {\n  if (typeof func !== 'function') {\n    if (typeof config === 'function') {\n      func = config;\n      config = {};\n\n      // we COULD throw here, but it's perhaps better to just let people do what they want\n    } else {\n      throw new Error('endpoint executor must be a function check config (this happens when you use makeEndpoint inside of a get/post/any, or if you forget the config parameter) ' + JSON.stringify(config));\n    }\n  }\n\n  return async (request, response, extras) => {\n    try {\n      if (!config.noParse) {\n        request.raw = await collectBody(request);\n        const body = parseBody(request.raw.toString());\n        request.body = body;\n      }\n      const params = { request, response, body: config.noParse ? undefined : request.body, query: request.query, headers: request.headers, params: Object.assign({}, request.query || {}, request.body || {}), ...extras };\n      if (config.authenticator) {\n        params.identity = await config.authenticator(params);\n      }\n      if (config.required) {\n        const { missing, data } = getParams(config.required, params);\n\n        if (missing.length > 0) {\n          throw new HttpError({ status: 400, message: `missing params: ${missing.map(item => `\"${item}\"`).join(', ')}` });\n        }\n\n        params.required = data;\n      }\n      if (config.hidden_required) {\n        const { missing, data } = getParams(config.hidden, params);\n\n        if (missing.length > 0) {\n          throw new HttpError({ status: 400, message: 'your request is incomplete (this is probably because you are missing some essential hidden requirement)' });\n        }\n\n        params.hidden = data;\n      }\n      const endpointResponse = await func(params);\n\n      if (type === 'upgrade') {\n        // upgrade requests should not have information automatically sent to the client\n      } else {\n        if (!response._headerSent) {\n          if (typeof endpointResponse === 'string') {\n            response.send(endpointResponse);\n          } else {\n            response.json(endpointResponse);\n          }\n        }\n      }\n    } catch (err) {\n      try {\n        await config?.onError?.({ error: err, config, request, response, ...extras });\n        await apinionRouter?.onError?.({ error: err, config, request, response, ...extras });\n      } catch (subError) {\n        console.error(`custom error handler threw error (check your onError handler in your ${config?.route || request.originalUrl} endpoint) (check your apinionRouter.onError function)`, subError);\n      }\n\n      if (!response._headerSent) {\n        // this gets tricky with upgrade requests, you can manually set this flag in your config error handler if you want to avoid the extra data\n        applyHttpError(request, response, err);\n      }\n    }\n  };\n}\n","import http from 'http';\n\nexport class wsRequest extends http.IncomingMessage {\n  constructor() {\n    super();\n  }\n}\n\nexport class wsResponse extends http.OutgoingMessage {\n  constructor(request, socket, configuration) {\n    super(request, configuration);\n    /**\n     * @type {import('net').Socket}\n     */\n    this.sock = socket;\n\n    if (!this[Symbol('kSocket')]) {\n      this[Symbol('kSocket')] = socket;\n    }\n  }\n\n  status(code) {\n    this.statusCode = code;\n    return this;\n  }\n\n  getHeadersString() {\n\n  }\n\n  send(data) {\n    if (!this.sock || this.sock?.destroyed) {\n      return;\n    }\n\n    this.status(this.statusCode || 200);\n    if (this._header) {\n      this.sock.write(this._header);\n    } else {\n      this.sock.write('HTTP/1.1 ' + this.statusCode + ' ' + http.STATUS_CODES[this.statusCode] + '\\r\\n');\n    }\n\n    this.sock.write('\\r\\n');\n    if (data instanceof Buffer || typeof data === 'string') {\n      this.sock.write(data);\n    } else {\n      this.sock.write(JSON.stringify(data));\n    }\n    this.sock.end();\n    this._headerSent = true;\n\n    // unsure why this doesn't work :/\n    // for now let's stick with direct socket writing and move on with our lives\n\n    // this.status(this.statusCode || 200);\n    // if (data instanceof Buffer || typeof data === 'string') {\n    //   this.end(data); // same as this.write then this.end\n    // } else if (typeof data === 'object') {\n    //   this.end(JSON.stringify(data)); // same as this.write then this.end\n    // } else {\n    //   this.end(`${data}`);\n    // }\n  }\n\n  json(data) {\n    this.send(JSON.stringify(data));\n  }\n\n  _implicitHeader() {\n    if (this._header) {\n      return;\n    }\n\n    this._storeHeader(this.method + ' ' + this.path + ' HTTP/1.1\\r\\n',\n                      this[Symbol('kOutHeaders')]);\n  }\n}\n","import express from 'express';\nimport stream from 'stream';\nimport { joinWithSingle } from './utilities/joinWithSingle';\nimport { responseWrapper } from './utilities/responseWrapper';\nimport { HttpError, applyHttpError } from './utilities/HttpError';\nimport { wsRequest, wsResponse } from './utilities/websock';\n\nexport class Router {\n  /**\n   * @param {express} app\n   * @param {Router} parent\n   * @param {string} baseDirectory\n   */\n  constructor(expressApp, parent, baseDirectory) {\n\n    /**\n     * @type {Router}\n     * @public\n     * @readonly\n     * @description The parent router\n    **/\n    this.parent = parent;\n    /**\n     * Express application\n     * @type {express.Express}\n     * @public\n     */\n    this.app = expressApp || express();\n    this.baseDirectory = baseDirectory;\n    this.routes = {};\n    this.upgradeRoutes = [];\n    this.upgradeFunctions = [];\n    this.destroyUnmatchedSocketRequests = true;\n  }\n\n  /**\n   * When an uncaught error is thrown, or an promise is rejected and unhandled, this function will be called. If you want to respond with a custom error you can do so here, we recommend passing through any HttpErrors using something like\n   * if (error instanceof HttpError) return response.status(error.status).send(error.message)\n   * This is where you want to setup logging, generally 500 errors at least should be logged\n   * @param {function({ error: Error, config: Object, request: express.Request, response: express.Response }):null} callback\n   */\n  addErrorHandler = (callback) => {\n    this.onErrorCallback = callback;\n  }\n\n  handleResponseCallback = (req, res) => {\n    if (this.onResponseCallback) {\n      this.onResponseCallback(req, res);\n    }\n  }\n\n  handleEarlyDisconnect = (req, res) => {\n    if (this.onEarlyDisconnectCallback) {\n      this.onEarlyDisconnectCallback(req, res);\n    }\n  }\n\n  /**\n   * Add a response callback after a request has generated a response, typically used for logging\n   * @param {function({ request: express.Request, response: express.Response, status: int }):void} callback\n   */\n  addResponseCallback = (callback) => {\n    if (!this.onResponseCallback) {\n      // only add the middleware once, it will call the callback using our class handleResponseCallback method\n\n      this.responseMiddleFunc = (req, res, next) => {\n        res.on('finish', () => {\n          this.handleResponseCallback({ request: req, response: res, status: res.statusCode });\n        });\n        next();\n      };\n\n      this.app.use(this.responseMiddleFunc);\n    }\n\n    this.onResponseCallback = callback;\n  }\n\n  /**\n   * Add a response callback in the event that a user disconnects before the response is sent\n   * @param {function({ request: express.Request, response: express.Response }):void} callback\n   */\n  addEarlyDisconnectCallback = (callback) => {\n    if (!this.onEarlyDisconnectCallback) {\n      // only add the middleware once, it will call the callback using our class handleEarlyDisconnect method\n\n      this.earlyDisconnectMiddleFunc = (req, res, next) => {\n        res.on('close', () => {\n          if (!res.headersSent) {\n            this.handleEarlyDisconnect({ request: req, response: res, status: res.statusCode });\n          }\n        });\n        next();\n      };\n\n      this.app.use(this.earlyDisconnectMiddleFunc);\n    }\n\n    this.onEarlyDisconnectCallback = callback;\n  }\n\n  onError = (...params) => {\n    if (this.onErrorCallback) {\n      return this.onErrorCallback(...params);\n    } else {\n      this.parent?.onError(...params);\n    }\n  }\n\n  handle404 = async (request, response) => {\n    await this.onError?.({ error: new HttpError({ status: 404, message: 'No Matching Route', data: { fallthrough: true } }), request, response });\n\n    if (!response._headerSent) {\n      response.status(404).send('Not Found');\n    }\n  }\n\n  setAuthenticator = (authenticator) => {\n    this.authenticator = authenticator;\n  }\n\n  getRoutes = () => {\n    const result = {};\n\n    const keyList = Object.keys(this.routes);\n\n    for (let key of keyList) {\n      const info = Object.assign({}, this.routes[key]);\n      if (info.subrouter) {\n        info.subrouter = info.subrouter.getRoutes?.();\n      }\n      result[key] = info;\n    }\n\n    return result;\n  }\n\n  getCleanedSubPath = (path) => {\n    const subPath = this.getSubPath(path);\n    if (subPath.length > 0 && subPath[0] !== '/') return '/' + subPath; // http://server.comFIX => http://server.com/FIX\n\n    return subPath;\n  }\n\n  getSubPath = (path) => {\n    if (!this.baseDirectory) return path;\n    if (path === '/') return this.baseDirectory;\n    return joinWithSingle([this.baseDirectory, path], '/');\n  }\n\n  describeSubroute = (subdirectory, meta) => {\n    if (!this.routes[subdirectory]) this.routes[subdirectory] = {};\n    Object.assign(this.routes[subdirectory], meta);\n  }\n\n  subrouter = (subdirectory) => {\n    const subRouter = new Router(this.app, this, this.getCleanedSubPath(subdirectory));\n    subRouter.setAuthenticator(this.authenticator);\n    this.describeSubroute(subdirectory, { subrouter: subRouter });\n    return subRouter;\n  }\n\n  getResponseWrapper = (callback, config = {}, type) => {\n    if (this.authenticator && !config.authenticator) {\n      config.authenticator = this.authenticator;\n    }\n\n    return responseWrapper(callback, config, this, type);\n  }\n\n  makeRouteDetails = (type, route, config, callback) => {\n    const defaultedConfig = config || {};\n    const cleanedPath = this.getCleanedSubPath(route);\n    if (!defaultedConfig.route) defaultedConfig.route = cleanedPath;\n    this.describeSubroute(cleanedPath, { [type]: defaultedConfig });\n    let params = [cleanedPath];\n    if (defaultedConfig?.middleware) {\n      params = params.concat(defaultedConfig.middleware)\n    }\n    params.push(this.getResponseWrapper(callback, defaultedConfig, type));\n    return params;\n  }\n\n  /**\n   * Add a route that responds to GET requests, body will never be filled\n   * create your authenticator with one of the maxXXXAuthenticator functions, or create a custom function throwing an HttpError or returning an identity\n   * @param {string|RegExp} route\n   * @param {{ required: string[]?, hidden_required: string[]?, authenticator: function({ request: express.Request, response: express.Response, body: object, query: object, headers: object, params: object }):any, noParse: boolean?, onError: function({ request, response, error }):null }} config\n   * @param {function({ request: express.Request, response: express.Response, identity: any, body: object, query: object, headers: object, params: object }):void} callback\n   */\n  get = (route, config, callback) => {\n    return this.app.get(...this.makeRouteDetails('get', route, config, callback));\n  }\n\n  /**\n   * Add a route that responds to POST requests, body will never be filled\n   * create your authenticator with one of the maxXXXAuthenticator functions, or create a custom function throwing an HttpError or returning an identity\n   * @param {string|RegExp} route\n   * @param {{ required: string[]?, hidden_required: string[]?, authenticator: function({ request: express.Request, response: express.Response, body: object, query: object, headers: object, params: object }):any, noParse: boolean?, onError: function({ request, response, error }):null }} config\n   * @param {function({ request: express.Request, response: express.Response, identity: any, body: object, query: object, headers: object, params: object }):void} callback\n   */\n  post = (route, config, callback) => {\n    return this.app.post(...this.makeRouteDetails('post', route, config, callback));\n  }\n\n  /**\n   * Add a route that responds to PUT requests\n   * create your authenticator with one of the maxXXXAuthenticator functions, or create a custom function throwing an HttpError or returning an identity\n   * @param {string|RegExp} route\n   * @param {{ required: string[]?, hidden_required: string[]?, authenticator: function({ request: express.Request, response: express.Response, body: object, query: object, headers: object, params: object }):any, noParse: boolean?, onError: function({ request, response, error }):null }} config\n   * @param {function({ request: express.Request, response: express.Response, identity: any, body: object, query: object, headers: object, params: object }):void} callback\n   */\n  put = (route, config, callback) => {\n    return this.app.put(...this.makeRouteDetails('put', route, config, callback));\n  }\n\n  /**\n   * Add a route that responds to PATCH requests\n   * create your authenticator with one of the maxXXXAuthenticator functions, or create a custom function throwing an HttpError or returning an identity\n   * @param {string|RegExp} route\n   * @param {{ required: string[]?, hidden_required: string[]?, authenticator: function({ request: express.Request, response: express.Response, body: object, query: object, headers: object, params: object }):any, noParse: boolean?, onError: function({ request, response, error }):null }} config\n   * @param {function({ request: express.Request, response: express.Response, identity: any, body: object, query: object, headers: object, params: object }):void} callback\n   */\n  patch = (route, config, callback) => {\n    return this.app.patch(...this.makeRouteDetails('patch', route, config, callback));\n  }\n\n  /**\n   * Add a route that responds to DELETE requests\n   * create your authenticator with one of the maxXXXAuthenticator functions, or create a custom function throwing an HttpError or returning an identity\n   * @param {string|RegExp} route\n   * @param {{ required: string[]?, hidden_required: string[]?, authenticator: function({ request: express.Request, response: express.Response, body: object, query: object, headers: object, params: object }):any, noParse: boolean?, onError: function({ request, response, error }):null }} config\n   * @param {function({ request: express.Request, response: express.Response, identity: any, body: object, query: object, headers: object, params: object }):void} callback\n   */\n  delete = (route, config, callback) => {\n    return this.app.delete(...this.makeRouteDetails('delete', route, config, callback));\n  }\n\n  /**\n   * Add a route that responds to OPTIONS requests, if you run enableCors this will be handled automatically\n   * create your authenticator with one of the maxXXXAuthenticator functions, or create a custom function throwing an HttpError or returning an identity\n   * @param {string|RegExp} route\n   * @param {{ required: string[]?, hidden_required: string[]?, authenticator: function({ request: express.Request, response: express.Response, body: object, query: object, headers: object, params: object }):any, noParse: boolean?, onError: function({ request, response, error }):null }} config\n   * @param {function({ request: express.Request, response: express.Response, identity: any, body: object, query: object, headers: object, params: object }):void} callback\n   */\n  options = (route, config, callback) => {\n    return this.app.options(...this.makeRouteDetails('options', route, config, callback));\n  }\n\n  /**\n   * Upgrade routes are a bit different than normal verb endpoints, this is meant to consume a websocket upgrade request, unfortunately due to some constraints with expressjs there is no way to directly attach an upgrade handler like normal so we have to consume the upgrade event and pass it to this callback, that means our route is a bit less flexible than normal and subrouters aren't easily supported\n   * In your callback the request and response types will not be expressjs request and response, but rather apinion.wsRequest and apinion.wsResponse\n   * @param {string|RegExp} route\n   * @param {{ required: string[]?, hidden_required: string[]?, authenticator: function({ request: express.Request, response: express.Response, body: object, query: object, headers: object, params: object }):any, noParse: boolean?, onError: function({ request, response, error }):null }} config\n   * @param {function({ request: wsRequest, response: wsResponse, identity: any, body: object, query: object, headers: object, params: object }):void} callback\n   */\n  upgrade = (route, config, callback) => {\n    config = config || {};\n    config.noParse = true; // must have noParse to avoid piping the socket\n    this.upgradeRoutes.push(this.makeRouteDetails('upgrade', route, config, callback));\n    this.globalUpgrade(this.handleInternalUpgrade); // deduplicates\n  }\n\n  handleInternalUpgrade = (request, socket, head) => {\n    const { url } = request;\n\n    for (let upgradeDetails of this.upgradeRoutes) {\n      let route = upgradeDetails[0];\n      // ignoring middleware second parameter, which is normally sent to app.get app.post, etc as the second parameter optionally\n      let callback = upgradeDetails[upgradeDetails.length - 1];\n\n      if (url.match(route)) {\n        const innerRequest = new wsRequest();\n        Object.assign(innerRequest, request);\n        innerRequest.originalUrl = url;\n\n        const innerResponse = new wsResponse(request, socket, { highWaterMark: socket.writableHighWaterMark, rejectNonStandardBodyWrites: false, keepAliveTimeout: 0, maxRequestsPerSocket: 0, shouldKeepAlive: true });\n\n        callback(innerRequest, innerResponse, { socket, head });\n\n        return;\n      }\n    }\n\n    if (this.destroyUnmatchedSocketRequests) {\n      socket.destroy();\n    }\n  }\n\n  /**\n   * Add a route that responds to ANY requests, GET, POST, PUT, PATCH, DELETE, OPTIONS\n   * create your authenticator with one of the maxXXXAuthenticator functions, or create a custom function throwing an HttpError or returning an identity\n   * @param {string|RegExp} route\n   * @param {{ required: string[]?, hidden_required: string[]?, authenticator: function({ request: express.Request, response: express.Response, body: object, query: object, headers: object, params: object }):any, noParse: boolean?, onError: function({ request, response, error }):null }} config\n   * @param {function({ request: express.Request, response: express.Response, identity: any, body: object, query: object, headers: object, params: object }):void} callback\n   */\n  any = (route, config, callback) => {\n    const params = this.makeRouteDetails('any', route, config, callback);\n\n    return [\n      this.app.get(...params),\n      this.app.put(...params),\n      this.app.post(...params),\n      this.app.patch(...params),\n      this.app.delete(...params),\n      this.app.options(...params),\n    ];\n  }\n\n  /**\n   * @param {express.RequestHandler} func\n   * @param  {...any} passthrough\n   */\n  use = (func, ...passthrough) => {\n    this.app.use(func, ...passthrough);\n  }\n\n  /**\n    * A callback used to handle upgrade requests, this is a global event instead of an event attached to a given endpoint\n    * @callback upgradeCallback\n    * @param {express.Request} request - The express request\n    * @param {stream.Duplex} socket - The tcp socket\n    * @param {Buffer} head\n   */\n\n  /**\n   * @param {upgradeCallback} callback\n   */\n  globalUpgrade = (func) => {\n    if (this.upgradeFunctions.indexOf(func) === -1) {\n      this.upgradeFunctions.push(func);\n\n      if (this.connection) {\n        this.attachUpgradeFunction(func);\n      }\n    }\n  }\n\n  attachUpgradeFunction = (func) => {\n    if (this.connection) {\n      this.connection.on('upgrade', func);\n    }\n  }\n\n  detachUpgradeFunction = (func) => {\n    if (this.connection) {\n      this.connection.off('upgrade', func);\n    }\n\n    const index = this.upgradeFunctions.indexOf(func);\n    if (index > -1) {\n      this.upgradeFunctions.splice(index, 1);\n    }\n  }\n\n  applyConnectionHandlers = () => {\n    if (this.upgradeFunctions?.length) {\n      for (let func of this.upgradeFunctions) {\n        this.attachUpgradeFunction(func);\n      }\n    }\n  }\n\n  /**\n   * @param {Array.<{ path, executor, get, options, delete: deleteRoute, patch, post, put, subrouter, any }>} routes\n   */\n  applyRoutes = (routes) => {\n    if (Array.isArray && !Array.isArray(routes)) {\n      routes = [routes];\n    }\n\n    for (let route of routes) {\n      const { path, executor, get, options, delete: deleteRoute, patch, post, put, subrouter, any, upgrade } = route;\n\n      if (executor) this.any(path, executor.config, executor.callback);\n      if (any) this.any(path, any.config, any.callback);\n      if (get) this.get(path, get.config, get.callback);\n      if (post) this.post(path, post.config, post.callback);\n      if (options) this.options(path, options.config, options.callback);\n      if (patch) this.patch(path, patch.config, patch.callback);\n      if (put) this.put(path, put.config, put.callback);\n      if (deleteRoute) this.delete(path, deleteRoute.config, deleteRoute.callback);\n      if (upgrade) this.upgrade(path, upgrade.config, upgrade.callback);\n      if (subrouter) {\n        const sub = this.subrouter(path);\n        sub.applyRoutes(subrouter);\n      }\n    }\n  }\n\n  /**\n   * @returns {express.Express}\n   */\n  expressApp() {\n    return this.app;\n  }\n  enableCors = (origin = '*', headers = 'Origin, X-Requested-With, Content-Type, Accept, Authorization') => {\n    this.app.use((req, res, next) => {\n      res.header('Access-Control-Allow-Origin', origin);\n      res.header('Access-Control-Allow-Headers', headers);\n      next();\n    });\n    this.app.options('*', (request, result) => result.status(200).send());\n  }\n  close = () => {\n    if (this.connection) {\n      this.connection.close();\n    }\n  }\n  listen = (port, callback) => {\n    return new Promise((resolve, reject) => {\n      this.connection = this.app.listen(port, (results) => {\n        console.log('listening on port', port);\n        callback?.(results);\n        this.app.removeListener('error', reject)\n        resolve(results);\n      });\n      this.app.use((request, response, next) => {\n        this.handle404(request, response);\n      });\n      this.app.once('error', reject);\n      this.connection.keepAliveTimeout = 60 * 1000;\n      this.connection.headersTimeout = 61 * 1000;\n      this.applyConnectionHandlers();\n    });\n  }\n}\n","/**\n * Create an api endpoint object, add to your router with methods like router.get, router.post, etc.\n * @param {{ required: string[]?, hidden_required: string[]?, authenticator: function({ request: express.Request, response: express.Response, body: object, query: object, headers: object, params: object }):any, noParse: boolean?, onError: function({ request, response, error }):null }} config\n * @param {function({ request: express.Request, response: express.Response, identity: any, body: object, query: object, headers: object, params: object }):void} executionFunction\n * @returns {{ config: any, callback: any }}\n */\nexport function makeEndpoint(config, executionFunction) {\n  return {\n    config,\n    callback: executionFunction,\n  };\n}\n"],"names":["getTypeString","data","stringType","stringified","toString","apply","length","splits","substr","split","slice","join","toLowerCase","isNaN","HttpError","status","message","name","stringifyError","error","Error","JSON","stringify","Object","getOwnPropertyNames","applyHttpError","request","response","json","assign","send","makeHardcodedBasicAuthenticator","users","usersByUsername","user","username","getUser","password","makeBasicAuthenticator","getUserFromCredentials","config","headers","authorization","indexOf","auth","replace","encoded","Buffer","from","decoded","colonPosition","substring","makeBearerTokenAuthenticator","getUserFromBearerFunction","token","identity","makeRequestAuthenticator","getUserFromRequest","params","findIndexInDirection","string","predicate","direction","dex","joinWithSingle","parts","joiner","cleanedPartArray","map","item","firstNonJoiner","letter","finalNonJoiner","startingChars","parseBody","input","inputType","startingType","output","parse","err","sections","section","decodeURIComponent","WritableBufferStream","callback","options","alloc","chunk","encoding","buffer","concat","Writable","getParams","keyList","body","query","missing","key","undefined","push","collectBody","Promise","resolve","reject","on","pipe","responseWrapper","func","apinionRouter","type","extras","noParse","raw","authenticator","required","hidden_required","hidden","endpointResponse","_headerSent","onError","console","route","originalUrl","wsRequest","http","IncomingMessage","wsResponse","socket","configuration","sock","Symbol","code","statusCode","destroyed","_header","write","STATUS_CODES","end","_storeHeader","method","path","OutgoingMessage","Router","expressApp","parent","baseDirectory","onErrorCallback","req","res","onResponseCallback","onEarlyDisconnectCallback","responseMiddleFunc","next","handleResponseCallback","app","use","earlyDisconnectMiddleFunc","headersSent","handleEarlyDisconnect","fallthrough","result","keys","routes","info","subrouter","getRoutes","subPath","getSubPath","subdirectory","meta","subRouter","getCleanedSubPath","setAuthenticator","describeSubroute","defaultedConfig","cleanedPath","middleware","getResponseWrapper","get","makeRouteDetails","post","put","patch","upgradeRoutes","globalUpgrade","handleInternalUpgrade","head","url","upgradeDetails","match","innerRequest","innerResponse","highWaterMark","writableHighWaterMark","rejectNonStandardBodyWrites","keepAliveTimeout","maxRequestsPerSocket","shouldKeepAlive","destroyUnmatchedSocketRequests","destroy","passthrough","upgradeFunctions","connection","attachUpgradeFunction","off","index","splice","Array","isArray","executor","deleteRoute","any","upgrade","sub","applyRoutes","origin","header","close","port","listen","results","log","removeListener","handle404","once","headersTimeout","applyConnectionHandlers","express","makeEndpoint","executionFunction"],"mappings":"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"}